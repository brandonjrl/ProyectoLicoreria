<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MP/Qhzz/0Ig9/3+ttMNAv/8EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADTjUm50Ig+/9SP
        Pf/60BP/+9EI//vRCP/70Qj/+9EI//vRCP/70Qj/+9IP//vVMP/722D/+9ti//vbYv/72U7/+9EL//vQ
        Af/70AH/+9AF/92gN//Qhzz/0YtF6gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1ZVVDNeZ
        X/HXmV//6bpg//rYYf/20F3/9tBd//bQXf/20F3/9tBd//bQXf/20F3/9tBd//bQXf/20F3/9tBd//bQ
        Xf/2z1L/9scS//bGCf/4ywX/+M0Z/9CHPP/Qhzz/1JFKZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADYmF5U15lf/9mbX//52GH/67pU/9OWSP++j1j/xZFT/9iYRP/WlUr/0I5Y/9OSUf/YmET/0JdM/8OW
        Wf/Nl0//2JhE/9SaRP/Rm0T/1Zg3/+KmI//70AH/4aY2/9CHPP/SjUfMAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANiZXqLXmV//465g//vbYv/722L/0s2D/ziX/v9rqdX/+9ti/+fFk/+7k/7/063F//vb
        Yv+616L/W9H//6TVt//722L/3uhn/8L1bP/i5E3/+9AB//vQAf/ywyb/0Ic8/9CJQPoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA2Jlfz9eZX//sv2D/+9ti//vbYv/SzYP/OJf+/2up1f/722L/58WT/7uT
        /v/TrcX/+9ti/7rXov9b0f//pNW3//vbYv/e6Gf/wvVs/+LnZf/70g3/+9AB//rPE//Qhzz/0Ic8/86S
        SRUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXmV/p15lf/+/GYf/722L/+9ti/9LNg/84l/7/a6nV//vb
        Yv/oxpH/u5P+/9OuxP/722L/utei/1vR//+k1bf/+9ti/97oZ//C9Wz/4udm//vWNP/70AH/+tAJ/9CH
        PP/Qhzz/0ZFIQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANeZX/jXmV//8sph//vbYv/722L/0s2D/ziX
        /v9rqdX/+9ti//nZZv/qyIv/9NRz//vbYv+616L/W9H//6TVt//722L/3uhn/8L1bP/i52b/+9pY//vQ
        Af/70AP/0Ic8/9CHPP/SjkxhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA15lf5NeZX//vxWH/+9ti//vb
        Yv/WzoD/OJf+/26q0v/722L/+9ti//vbYv/722L/+9ti/7rXov9b0f//pNW3//vbYv/e6Gf/wvVs/+Ln
        Zv/722L/+9IP//rQCP/Qhzz/0Ic8/9GPSUIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADWml/J15lf/+q9
        Yf/722L/+9ti//rbY//Xz3//6NRx//vbYv/722L/+9ti//vbYv/722L/utei/1vR//+k1bf/+9ti/97o
        Z//C9Wz/4udm//vbYv/70yH/+c4W/9CHPP/Rhzz/0pZLEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANea
        XpLXmV//4Kpg//vbYv/722L/+9ti//vbYv/722L/+9ti//vbYv/722L/+9ti//vbYv+616L/W9H//6TV
        t//722L/4Odn/8L1bP/j5mb/+9ti//vUKf/wwCf/0Ic8/9GKQfYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA1ZhfQ9eZX//YmmD/99Rh//vbYv/722L/+9ti//vbYv/722L/+9ti//vbYv/722L/+9ti/7rX
        ov9b0f//pNW3//vbYv/53GL/9N9j//rcY//722L/+9Us/9ubOf/Qhzz/041GwAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC/gEAE15lf39eZX//ls2D/+9ti//vbYv/722L/+9ti//vbYv/722L/+9ti//vb
        Yv/722L/utei/1vR//+k1bf/+9ti//vbYv/722L/+9ti//vbYv/wwUD/0Ic8/9CHPP/Vj0lCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADWmF9e15lf/9eaX//yymL/+9ti//vbYv/722L/+9ti//vb
        Yv/722L/+9ti//vbYv/V2Yj/htPV/8XXl//722L/+9ti//vbYv/722L/9tNi/9WSRf/Qhzz/0otE2AAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+AgALXml/E15lf/9qdX//20WL/+9ti//vb
        Yv/722L/+9ti//vbYv/722L/+9ti//vbYv/722L/+9ti//vbYv/722L/+9ti//nXYv/dpl//0Ig9/9GI
        Pv3QlE0rAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANObZBfYmV/i15lf/9qd
        X//xyWH/+9ti//vbYv/722L/+9ti//vbYv/722L/+9ti//vbYv/722L/+9ti//vbYv/30mL/3aRg/9WT
        U//Qhzz/1I5KcQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANaX
        XSzYmV/i15lf/9eaX//ksmD/99Rh//vbYv/722L/+9ti//vbYv/722L/+9ti//vbYv/52GH/6bth/9mc
        X//XmV//0oxG/NONS4sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANWVYBjXml/E15lf/9eZX//Xml//4Kpg/+u9Yf/vxWH/8spi//DGYf/sv2D/465g/9mb
        X//XmV//15lf/9aWWOfTj0tiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAHYmWBV15lf3deZX//XmV//15lf/9eZX//XmV//15lf/9eZ
        X//XmV//15lf/9eZX/PYmmCI2J1iDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC/gEAE2JthQteZX5HXmWDI15lf5NeZ
        X/nXmV/n15le0NiZXqLYmF5U1ZVVDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAA//8AAP/+AAD//AAA//gAAP/wEAD/4DAAH8BwAAIA8AAAAfAAAAPwAA
        AH8AAAB/gAAAf4AAAP8AAAB/AAAAfwAAAH8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAH8AAAB/AAAAf4AA
        AP+AAAD/wAAB/+AAA//wAAf/+AAP//4AP/8=
</value>
  </data>
</root>