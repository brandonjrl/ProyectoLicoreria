<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnIngresar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        6wAAAOsBK2zXwgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAE5SURBVFhH7ZdN
        agJBEIVnlaW38BLRC4h4Ak+QpdlkpXHpFbyBl/AYWYYgukzIEeIrYsGju/rXHgTxgw+dtqteM43MdPeg
        MQe4hws4lIGWTOEJ/jl+Q8X97RNu4Qw+was4QjdAjC2A/YU7OIcDWIw2isGBMT9gMVocg0NSFpNTyAEp
        i5G95v22sIJC9oIVFLIXrKCQ1bxdPi2soJDVSPHm/6uHGxKzGm1gLYIDUnq8QLm9KbnJGjI6/gxHdG3p
        YU3KcQUVHVN4nquHNSnHJVR0TOF5rh7yCJV9TclN3iGj43L7x3RtWY02cMMFDkhZjRRb4YIbErMa+SeE
        sIJC9oIVFLIXrKCQxfzAmz6Ocwo5IGUxOYUckLKYnEIOiFn1Unrz1/IJtBYRW0DTg0kOX1COZq+w+dHs
        Hum6Mxera6Qeg6DMAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVVVQNYLi49WCwsXVku
        LlNVKyseAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFkvLytYLS1lWi0tZlotLWZaLS1mWi0tZlot
        LWZaLS1mWi0tZlotLWZaLS1mWi0tZlotLWZaLS1mWi0tZlgsLGJVLy8bAAAAAAAAAABaMDVbWS437Vkx
        We5XNYH1WDV38VkuQPJYLjy8WDExGgAAAAAAAAAAAAAAAAAAAABZMzMUYDU18aB6dvehfHj3oXx496F8
        ePehfHj3oXx496F8ePehfHj3oXx496F8ePehfHj3nXZz+Fw1N/9MbI3/UGeF/l06PekAAAAAWC85fVkw
        TvJWPt7/VUH//1VB//9VQf//VUD9/1c6qPxYLjnqVSsrHgAAAAAAAAAAAAAAAForKzB5UE3t+9zT//vc
        0//Go53/89PK//vc0//Qraf/6cnB//vc0//auLH/4L+3//vc0//x0cn/X0BF/zKz//8ys///WjQ3+1cr
        KzVZLkHyVUDz/1VB//9VQf//VUH4/1VB//9VQf//VUH//1Y5sP5ZLS/7Wy4u9VsuLvVbLi71Wi4u93lP
        TfX73NP/1rOs/10xMf+Ta2f/5sW9/2E1Nf9+VVP/9NXM/2c7Ov9sQUD/+drS//HRyf9fQEX/MrP//zKz
        //9aNDf7WS49tVY6tv5VQf//Vj/v/1U90/9YMVv/VUH//1Y+2v9VQf//VUH//1sxTv94QkL/f0dH/39H
        R/94QkL/eU9N//vc0//73NP/uJSO/+/Pxv/73NP/w6Ca/+PCu//73NP/0K2n/9e1rv/73NP/8dHJ/19A
        Rf8ys///MrP//1o0N/tZLjbwVUDz/1Y+3P9YMEv/Vju+/1gvQv9WQPL/WDJl/1c1g/9VQfz/VzeX/207
        PP9/R0f/f0dH/3tFRf9kODj/uZSP/7uWkf+7lpH/u5aR/7uWkf+7lpH/u5aR/7uWkf+7lpH/u5aR/7uW
        kf+0j4r/XDk8/0J9q/9EeKH/XDk881guM/hVQf//WDR0/1c0cf9VQf7/WDNy/1Y7wf9WPt//WS00/1Y8
        z/9XOan/azpA/39HR/9/R0f/f0dH/3VAQP9vPj3/bj49/24+Pf9uPj3/bj49/24+Pf9uPj3/bj49/24+
        Pf9uPj3/bj49/2E0NPpeMzS5Xz1Al103O49aKyswWS456FU/6/9VQPX/WDNs/1c5q/9XOKb/VzaN/1kx
        VP9XO7f/VUH//1g2h/9vPD3/f0dH/39HR/9/R0f/f0dH/39HR/9/R0f/f0dH/39HR/9/R0f/f0dH/39H
        R/9/R0f/f0dH/39HR/9/R0f/aDc38louLlgAAAAAAAAAAAAAAABaLzyZVjid+1VB//9VQf//VUD9/1U+
        4v9XNoz/VUH9/1VB//9VQPr/Wy8+/3pERP9/R0f/f0dH/31GRv93QkL/d0FB/35GRv9/R0f/f0dH/39H
        R/9/R0f/f0dH/39HR/9/R0f/f0dH/39HR/9oNzfyWi4uWAAAAAAAAAAAAAAAAFsuLhxZLTjyVT3Y/1VB
        //9VQf//VUH//1VB//9VQf//VUH//1k2g/9nOEH/f0dH/35GRv9qPFD/XDM+/2I7ZP9iO2T/XDI8/2o8
        Uf9+Rkb/f0dH/39HR/9/R0f/f0dH/39HR/9/R0f/f0dH/2g3N/JaLi5YAAAAAAAAAAAAAAAAAAAAAFks
        MEVZLTnzVzit/VVA+P9VQf//VUH//1Y+4/9aNW3/YjQ//35GRv9+R0f/ZDlM/1g1gP9VQPb/VUH//1VB
        //9VQPX/WDV//2Q5TP9/Rkb/f0dH/39HR/9/R0f/f0dH/39HR/9/R0f/aDc38louLlgAAAAAAAAAAAAA
        AAAAAAAAAAAAAFowMCVZLjjDWi4z/lsxSv9aMEH/XTA7/288QP9/R0f/f0dH/3M/P/9aLi//Vzia/1VA
        /f9VQf//VUH//1VA/f9XOJr/Wi4v/3M/P/9/R0f/f0dH/39HR/9/R0f/f0dH/39HR/9oNzfyWi4uWAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFouLlhnNzfzfERE/31FRf9/R0f/f0dH/39HR/9/R0f/bT8//8Sh
        m/97VGn/XzZL/188gv9fPIL/XzZL/3tUaf/DoJr/bT8+/39HR/9/R0f/f0dH/39HR/9/R0f/f0dH/2g3
        N/JaLi5YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWi4uWGg3N/J/R0f/f0dH/39HR/9/R0f/f0dH/39H
        R/9pPDv/58a+//vc0/93VVb/UWN+/1Ffef93VVb/+9zT/+bGv/9oPDz/f0dH/39HR/9/R0f/f0dH/39H
        R/9/R0f/aDc38louLlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaLi5YaDc38n9HR/9/R0f/f0dH/39H
        R/9/R0f/f0dH/2s+Pf/Ws6z/+drS/1s0Nf8zsv3/M7L9/1syM//62tH/1LKs/20/P/9/R0f/f0dH/39H
        R/9/R0f/f0dH/39HR/9oNzfyWi4uWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFouLlhoNzfyf0dH/39H
        R/9/R0f/f0dH/39HR/9/R0f/cT8//41lYv/73NP/e1pc/1Bhe/9QYXr/e1td//vc0/+NZGH/cj4+/39H
        R/9/R0f/f0dH/39HR/9/R0f/f0dH/2g3N/JaLi5YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWi4uWGg3
        N/J/R0f/f0dH/39HR/9/R0f/f0dH/39HR/9+R0f/aTw7/6yGgv/y0sn/tJCM/7SQi//y0sn/qoWA/2c6
        Of9+Rkb/f0dH/39HR/9/R0f/f0dH/39HR/9/R0f/aDc38louLlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABaLi5YaDc38n9HR/9/R0f/f0dH/39HR/9/R0f/f0dH/39HR/99Rkb/bD49/2s/Pv+Wbmv/lW5r/2s/
        Pv9sPj3/fEVF/39HR/9/R0f/f0dH/39HR/9/R0f/f0dH/39HR/9oNzfyWi4uWAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFouLlhoNzfyf0dH/39HR/9/R0f/f0dH/39HR/9/R0f/f0dH/39HR/9/R0f/ekRE/3E+
        Pv9xPT3/ekRE/39HR/9/R0f/f0dH/39HR/9/R0f/f0dH/39HR/9/R0f/f0dH/2g3N/JaLi5YAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAWi4uWGIyMvttODn/bTg5/204Of9tODn/bTg5/204Of9tODn/bTg5/204
        Of9tODn/bTg5/204Of9tODn/bTg5/204Of9tODn/bTg5/204Of9tODn/bTg5/204Of9tODn/YjIy+1ou
        LlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABaLi5YhD5B/s9aYf/PWmH/z1ph/89aYf/PWmH/z1ph/89a
        Yf/PWmH/z1ph/89aYf/PWmH/z1ph/89aYf/PWmH/z1ph/89aYf/PWmH/x1he/89aYf/LWWD/yllg/89a
        Yf+EPkH+Wi4uWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFouLliVRkn9+Wt0//lrdP/5a3T/+Wt0//lr
        dP/5a3T/+Wt0//lrdP/5a3T/+Wt0//lrdP/5a3T/+Wt0//lrdP/5a3T/+Wt0/+hkbP9zNzn/2F5l/6VK
        Tv+UQ0f/+Wt0/5VGSf1aLi5YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWCwsV3M3Of2fSU3/n0lN/59J
        Tf+fSU3/n0lN/59JTf+fSU3/n0lN/59JTf+fSU3/n0lN/59JTf+fSU3/n0lN/59JTf+fSU3/n0lN/59J
        Tf+fSU3/n0lN/59JTf+fSU3/czc5/VgsLFcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZMzMUWi0tZlot
        LWZaLS1mWi0tZlotLWZaLS1mWi0tZlotLWZaLS1mWi0tZlotLWZaLS1mWi0tZlotLWZaLS1mWi0tZlot
        LWZaLS1mWi0tZlotLWZaLS1mWi0tZlotLWZYLS1lWTMzFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////+D+AADAPAAAgBwAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAHAAAABwAAAAeAAAAHwAAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AA
        AAfgAAAH4AAAB/////////////////////8=
</value>
  </data>
</root>