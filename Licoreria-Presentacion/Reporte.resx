<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAtAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAACIAAAAiAAA
        AIgAAACIAAAAiAAAAIgAAACIAAAAiAAAAIgAAAAtAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAIAzKyr/ZlZU/2ZWVP9mVlT/ZlZU/2ZWVP9mVlT/ZlZU/2ZWVP9mVlT/ZlZU/2ZW
        VP9mVlT/ZlZU/2ZWVP9mVlT/ZlZU/2ZWVP9mVlT/Mysq/wAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAgF9QTv+dhYH/WUtJ/1lLSf9ZS0n/WUtJ/1lLSf9ZS0n/WUtJ/1lL
        Sf9ZS0n/WUtJ/1lLSf9ZS0n/WUtJ/1lLSf9ZS0n/WUtJ/1lLSf8sJST/AAAAxAAAAIgAAAAtAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAX1BO/19QTv8/NzX/fm1r/35ta/9+bWv/fm1r/35t
        a/9+bWv/fm1r/35ta/9+bWv/fm1r/35ta/9+bWv/fm1r/35ta/9+bWv/fm1r/35ta/9+bWv/Pzc1/wAA
        AIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBfUE7/X1BO/3ZmZP/tzcj/w6ml/29g
        Xf9vYF3/b2Bd/29gXf9vYF3/b2Bd/29gXf9vYF3/b2Bd/29gXf9vYF3/b2Bd/29gXf9vYF3/b2Bd/29g
        Xf83Ly7/AAAAxAAAAIgAAACIAAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgF9QTv9fUE7/dmZk/+3N
        yP92ZmT/Qj48/4N7ef+De3n/g3t5/4N7ef+De3n/g3t5/4N7ef+De3n/g3t5/4N7ef+De3n/g3t5/4N7
        ef+De3n/g3t5/4N7ef+De3n/g3t5/0I+PP8AAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAX1BO/19Q
        Tv92ZmT/7c3I/3ZmZP99eHb/zsbD/3Vwb/91cG//zsbD/87Gw/91cG//dXBv/87Gw//OxsP/dXBv/3Vw
        b//OxsP/+vDt//rw7f/68O3/9+zn//Pk3/+0qab/RkJB/wAAALYAAABCAAAAAwAAAAAAAAAAAAAAAAAA
        AIBfUE7/X1BO/3ZmZP/tzcj/dmZk/359e/9+fXv/MB0U/zAdFP9+fXv/fn17/wsNMP8LDTD/fn17/359
        e/8QLUH/EC1B/359e//9+vf//fr3//369/++t7T/EhQe/wsOLP8XG1v/Fhta/woNJ/8GCxj1AAAAOwAA
        AAAAAAAAAAAAgF9QTv9fUE7/dmZk/+3NyP92ZmT/fn17/359e/9lQy//WjYm/359e/9+fXv/Gh9p/xQX
        Wv9+fXv/fn17/yBce/8eVHr/fn17//369//9+vf/wL68/wYIEf8lLJT/ND/S/zQ/0v80P9L/Lzm+/wQI
        Ef8ECw/7AAAAPAAAAAAAAACAX1BO/19QTv92ZmT/7c3I/3ZmZP9+fXv/fn17/2VDL/9aNib/fn17/359
        e/8aH2n/FBda/359e/9+fXv/IFx7/x5Uev9+fXv//fr3//j18v8REx7/JS2V/zQ/0v80P9L/ND/S/zQ/
        0P8NEjb/IFx7/yt+p/8EDhPsAAAABAAAAIBfUE7/X1BO/3ZmZP/tzcj/dmZk/359e/9+fXv/ZUMv/1o2
        Jv9+fXv/fn17/xofaf8UF1r/fn17/359e/8gXHv/HlR6/359e//9+vf/uLWz/wwPLP80P9L/ND/S/zQ/
        0v80P9L/Gh9p/xApPf8/t/P/QLn2/wwiLvsAAABEAAAAgF9QTv9fUE7/dmZk/+3NyP92ZmT/fn17/359
        e/9lQy//WjYm/359e/9+fXv/DA8x/wkLKv9+fXv/fn17/yBce/8eVHr/fn17//369/+Jh4b/CAoj/xMW
        VP8TFlT/ExZU/xEUTv8FDRf/Oqjf/0C59v9Aufb/G05p/wAAAHQAAACAX1BO/19QTv92ZmT/7c3I/3Zm
        ZP9+fXv/fn17/2VDL/9aNib/fn17/9DOy/+HhYT/h4WE/9DOy/9+fXv/IFx7/x5Uev9+fXv//fr3/4mH
        hv8mGBL/YTop/2E6Kf9hOin/MB0U/x1TeP9Aufb/QLn2/0C59v8bT2r/AAAAdAAAAIBfUE7/X1BO/3Zm
        ZP/tzcj/dmZk/359e/9+fXv/ZUMv/1o2Jv9+fXv//fr3//369//9+vf//fr3/359e/8gXHv/HlR6/359
        e//9+vf/t7Sy/yMZE//Kh17/yode/8qHXv9aNib/HlR6/0C59v9Aufb/QLn2/wwjL/sAAABFAAAAgF9Q
        Tv9fUE7/dmZk/+3NyP92ZmT/fn17/359e/9lQy//WjYm/359e//9+vf//fr3//369//9+vf/fn17/w8r
        Of8OJzj/fn17//369//49fL/GhcW/4daP//Kh17/yode/1o2Jv8eVHr/QLn2/0C59v8tgaz/BA4S7QAA
        AAQAAACAX1BO/19QTv92ZmT/7c3I/3ZmZP9+fXv/fn17/2VDL/9aNib/fn17//369//9+vf//fr3//36
        9//Qzsv/h4WE/4eFhP/Qzsv//fr3//369/+/vbv/DwwK/4dZP//Kh17/WjYm/x5Uev9Aufb/LYKt/wQM
        EPsAAAA9AAAAAAAAAIBfUE7/X1BO/3ZmZP/tzcj/dmZk/359e/9+fXv/Lx8W/yoZEv9+fXv//fr3//36
        9//9+vf//fr3//369//9+vf//fr3//369//9+vf//fr3//369/+8tbL/GhcW/yMZEv8jFhH/DCEw/Qwi
        MPwEDhLuAAAAPgAAAAAAAAAAAAAAgF9QTv9fUE7/dmZk/+3NyP92ZmT/fn17/9DOy/+HhYT/h4WE/9DO
        y//9+vf//fr3//369//9+vf//fr3//369//9+vf//fr3//369//9+vf//fr3//rw7f/z5N//s6il/0ZC
        Qf8AAAC2AAAARQAAAAMAAAAAAAAAAAAAAAAAAACAX1BO/19QTv92ZmT/7c3I/3ZmZP9+fXv/0M7L/3Z1
        c/92dXP/dnVz/9DOy//Qzsv/dnVz/3Z1c/92dXP/dnVz/3Z1c/92dXP/0M7L//369//9+vf/+vDt//bn
        4v/25+L/e3Nx/wAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBfUE7/X1BO/3ZmZP/tzcj/dmZk/359
        e/9+fXv/NiQZ/2xIMv82JBn/fn17/359e/82JBn/bEgy/2xIMv9sSDL/bEgy/zYkGf9+fXv//fr3//36
        9//68O3/9ufi//bn4v97c3H/AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgF9QTv9fUE7/dmZk/+3N
        yP92ZmT/fn17/359e/8xJRz/Y0s4/y8fFv9+fXv/fn17/zElHP9jSzj/Y0s4/2NLOP9jSzj/Lx8W/359
        e//9+vf//fr3//rw7f/25+L/9ufi/3tzcf8AAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAX1BO/19Q
        Tv92ZmT/7c3I/3ZmZP9+fXv/0M7L/4eFhP+HhYT/h4WE/9DOy//Qzsv/h4WE/4eFhP+HhYT/h4WE/4eF
        hP+HhYT/0M7L//369//9+vf/+vDt//bn4v/25+L/e3Nx/wAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIBfUE7/X1BO/3ZmZP/tzcj/dmZk/359e/+6srD/urKw/7qysP96cm//enJv/3pyb/96cm//enJv/3py
        b/96cm//enJv/3pyb/96cm//enJv/3pyb/+4rav/9ufi//bn4v97c3H/AAAAgAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAgF9QTv9fUE7/dmZk/+3NyP92ZmT/fn17/7qysP+6srD/urKw/3pyb/96cm//enJv/3py
        b/96cm//enJv/3pyb/96cm//enJv/3pyb/96cm//enJv/7itq//25+L/9ufi/3tzcf8AAACAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACAX1BO/19QTv92ZmT/7c3I/3ZmZP9+fXv/urKw/7qysP+6srD/enJv/3py
        b/96cm//enJv/3pyb/96cm//enJv/3pyb/96cm//enJv/7qysP/9+vf/+vDt//bn4v/25+L/e3Nx/wAA
        AIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBfUE7/X1BO/3ZmZP/tzcj/dmZk/359e/+6srD/urKw/7qy
        sP96cm//enJv/3pyb/96cm//enJv/3pyb/96cm//enJv/3pyb/96cm//urKw//369//68O3/9ufi//bn
        4v97c3H/AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgCwlJP8sJST/dmZk/+3NyP92ZmT/fn17/7qy
        sP+6srD/urKw/3pyb/96cm//enJv/3pyb/96cm//urKw//369//9+vf//fr3//369//9+vf//fr3//rw
        7f/25+L/9ufi/3tzcf8AAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtAAAAdwAAALt2ZmT/7c3I/3Zm
        ZP9+fXv/urKw/7qysP+6srD/enJv/3pyb/96cm//enJv/3pyb/+6srD//fr3//369//9+vf//fr3//36
        9//9+vf/+vDt//bn4v/25+L/e3Nx/wAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgDcv
        Lv9vYF3/Ny8u/359e/+6srD/urKw/7qysP96cm//urKw//369//9+vf//fr3//369//9+vf//fr3//36
        9//9+vf//fr3//369//68O3/9ufi//bn4v97c3H/AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAtAAAAdwAAAHcAAAC7fn17/7qysP+6srD/urKw/3pyb/+6srD//fr3//369//9+vf//fr3//36
        9//9+vf//fr3//369//9+vf//fr3//rw7f/25+L/9ufi/3tzcf8AAACAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA7Ojn/dnVz/3Z1c/92dXP/dnVz/3Z1c/92dXP/dnVz/3Z1
        c/92dXP/dnVz/3Z1c/92dXP/dnVz/3Z1c/92dXP/dXBv/3Nsaf9zbGn/OTU0/wAAAIAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALQAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAA
        AHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAALQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAD/wAAA/8AAAD/AAAA/wAAAB8AAAAfAAAABwAAAAMAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAHAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAA
        AB8AAAAfAAAAH8AAAB/AAAAf+AAAH/gAAB8=
</value>
  </data>
</root>